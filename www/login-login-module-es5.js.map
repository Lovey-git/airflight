{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","fb","api","toaster","authService","alertCtrl","loadingCtrl","navCtrl","app","loginForm","group","email","required","password","isLoggedin","localStorage","getItem","navigateByUrl","get","value","create","cssClass","message","loading","presentAlert","validateEmail","present","login","subscribe","data","status","dismiss","setItem","uuid","role","isLoggedIn","window","location","reload","do_activate_user","msg","error","header","subHeader","buttons","alert","inputs","name","type","placeholder","attributes","inputmode","text","handler","length","reset_password","successToast","console","log","activate_user","reset","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content fullscreen>\\n  <ion-grid>\\n    <div class=\\\"login-form\\\">\\n      <ion-col>\\n\\n        <div class=\\\"txt-center\\\">\\n          <ion-icon style=\\\"font-size: 55px;\\\" name=\\\"log-in-outline\\\"></ion-icon>\\n          <br>\\n          <strong>Login</strong>\\n          <br>\\n          <ion-label color=\\\"dark\\\">Sign Into Your Account.</ion-label>\\n          <br>\\n          <br>\\n        </div>\\n        <!-- login form -->\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n          <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required placeholder=\\\"Email\\\">\\n            <ion-icon name=\\\"at-outline\\\">\\n            </ion-icon>\\n          </ion-input>\\n          <br>\\n          <ion-input formControlName=\\\"password\\\" required placeholder=\\\"Password\\\" type=\\\"Password\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"lock-closed-outline\\\"></ion-icon>\\n          </ion-input>\\n          <br>\\n          <ion-button class=\\\"txt-center\\\" type=\\\"submit\\\" color=\\\"primary\\\">Login</ion-button>\\n        </form>\\n        <ion-footer class=\\\"txt-center\\\">\\n          <br>\\n          <a color=\\\"primary\\\" routerLink=\\\"/register\\\" (click)=\\\"app.openPage('Register');\\\">No account? Sign up here.</a>\\n          <br>\\n          <a color=\\\"primary\\\" style=\\\"cursor: pointer;text-decoration: underline;\\\" (click)=\\\"resetPass()\\\">Forgot Password? Click here.</a>\\n        </ion-footer>\\n      </ion-col>\\n    </div>\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../services/api.service';\nimport { ToasterService } from '../../services/toaster.service';\nimport { AuthService } from '../../services/auth.service';\nimport { AlertController, ToastController, LoadingController, MenuController, NavController } from '@ionic/angular';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public loginForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private api: ApiService,\n    private toaster: ToasterService,\n    private authService: AuthService,\n    private alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    public navCtrl: NavController,\n    public app: AppComponent,\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    if (this.authService.isLoggedin()) {\n      if (localStorage.getItem('ur') == 'admin') {\n        this.router.navigateByUrl('report');\n      } else {\n        if (localStorage.getItem('current_page_type') == 'flight') {\n          this.router.navigateByUrl('home');\n        } else {\n          this.router.navigateByUrl('tickets');\n        }\n      }\n    }\n  }\n\n\n  async login() {\n    let email = this.loginForm.get('email').value;\n    let password = this.loginForm.get('password').value;\n    const loading = await this.loadingCtrl.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...',\n    });\n\n    if (email == '') {\n      this.presentAlert('Email is required ⚠️');\n    } else if (password == '') {\n      this.presentAlert('Password is required ⚠️');\n    } else if (!this.api.validateEmail(email)) {\n      this.presentAlert('Invalid email entered ❌');\n    }\n    else {\n      await loading.present();\n      this.authService.login(\n        email,\n        password\n      ).subscribe(\n        data => {\n          if (data.status == 0) {\n            loading.dismiss();\n            localStorage.setItem('uuid', data.data[0].uuid);\n            localStorage.setItem('ur', data.data[0].role);\n            this.app.isLoggedIn = true;\n            window.location.reload();\n          } else if (data.status == 1) {\n            loading.dismiss();\n            this.do_activate_user(data.msg);\n          } else {\n            loading.dismiss();\n            this.presentAlert(data.msg);\n          }\n        }, error => {\n          loading.dismiss();\n          this.presentAlert(\"Could not connect to server 🖥️, check your internet connection!\");\n        }\n      )\n    }\n  }\n\n  async presentAlert(msg) {\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n      header: 'Air Food ✈️',\n      subHeader: 'Warning',\n      message: msg,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async resetPass() {\n    let email = this.loginForm.get('email').value;\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n      header: 'Reset Password!',\n      inputs: [\n        {\n          name: 'email',\n          type: 'text',\n          placeholder: 'Enter your Email',\n          cssClass: 'specialClass',\n          attributes: {\n            inputmode: 'decimal',\n            value: ''\n          }\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Ok',\n          handler: async (data) => {\n            const loading = await this.loadingCtrl.create({\n              cssClass: 'my-custom-class',\n              message: 'Please wait...',\n            });\n            if (data.email.length < 3) {\n              this.presentAlert('Email Required');\n            } else {\n              await loading.present();\n              this.api.reset_password(\n                email\n              ).subscribe(\n                data => {\n                  if (data.status == 0) {\n                    loading.dismiss();\n                    this.toaster.successToast(data.msg);\n                    this.presentAlert('Password reseted check your emails for further instructions!')\n                    console.log(data);\n                  } else {\n                    loading.dismiss();\n                    this.presentAlert(data.msg);\n                  }\n                }, error => {\n                  loading.dismiss();\n                  this.presentAlert(error.message);\n                }\n              )\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async do_activate_user(msg) {\n    let email = this.loginForm.get('email').value;\n    console.log(email);\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n      header: 'Re-activate',\n      message:msg,\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Re-activate',\n          handler: async (data) => {\n            const loading = await this.loadingCtrl.create({\n              cssClass: 'my-custom-class',\n              message: 'Please wait...',\n            });\n\n            await loading.present();\n            this.api.activate_user(\n              email\n            ).subscribe(\n              data => {\n                if (data.status == 0) {\n                  loading.dismiss();\n                  this.toaster.successToast(data.msg);\n                  this.presentAlert('Re-activation in process, check your emails for further instructions!')\n                  console.log(data);\n                } else {\n                  loading.dismiss();\n                  this.presentAlert(data.msg);\n                }\n              }, error => {\n                loading.dismiss();\n                this.presentAlert(error.message);\n              }\n            )\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n\n\n\n  revert() {\n    this.loginForm.reset();\n  }\n\n}\n"]}