{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","fb","api","toaster","authService","alertCtrl","loadingCtrl","navCtrl","app","loginForm","group","email","required","password","isLoggedin","localStorage","getItem","navigateByUrl","openPage","get","value","create","cssClass","message","loading","presentAlert","validateEmail","present","login","subscribe","data","status","dismiss","setItem","uuid","role","surname","name","isLoggedIn","window","location","reload","do_activate_user","msg","error","header","subHeader","buttons","alert","inputs","type","placeholder","attributes","inputmode","text","handler","length","reset_password","successToast","console","log","activate_user","reset","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content fullscreen>\\r\\n  <ion-grid>\\r\\n    <div class=\\\"login-form\\\">\\r\\n      <ion-col>\\r\\n\\r\\n        <div class=\\\"txt-center\\\">\\r\\n          <ion-icon style=\\\"font-size: 55px;\\\" name=\\\"log-in-outline\\\"></ion-icon>\\r\\n          <br>\\r\\n          <strong>Login</strong>\\r\\n          <br>\\r\\n          <ion-label color=\\\"dark\\\">Sign Into Your Account.</ion-label>\\r\\n          <br>\\r\\n          <br>\\r\\n        </div>\\r\\n        <!-- login form -->\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n          <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required placeholder=\\\"Email\\\">\\r\\n            <ion-icon name=\\\"at-outline\\\">\\r\\n            </ion-icon>\\r\\n          </ion-input>\\r\\n          <br>\\r\\n          <ion-input formControlName=\\\"password\\\" required placeholder=\\\"Password\\\" type=\\\"Password\\\">\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"lock-closed-outline\\\"></ion-icon>\\r\\n          </ion-input>\\r\\n          <br>\\r\\n          <ion-button class=\\\"txt-center\\\" type=\\\"submit\\\" color=\\\"primary\\\">Login</ion-button>\\r\\n        </form>\\r\\n        <ion-footer class=\\\"txt-center\\\">\\r\\n          <br>\\r\\n          <a color=\\\"primary\\\" routerLink=\\\"/register\\\" (click)=\\\"app.openPage('Register');\\\">No account? Sign up here.</a>\\r\\n          <br>\\r\\n          <a color=\\\"primary\\\" style=\\\"cursor: pointer;text-decoration: underline;\\\" (click)=\\\"resetPass()\\\">Forgot Password? Click here.</a>\\r\\n        </ion-footer>\\r\\n      </ion-col>\\r\\n    </div>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ToasterService } from '../../services/toaster.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { AlertController, ToastController, LoadingController, MenuController, NavController } from '@ionic/angular';\r\nimport { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private toaster: ToasterService,\r\n    private authService: AuthService,\r\n    private alertCtrl: AlertController,\r\n    public loadingCtrl: LoadingController,\r\n    public navCtrl: NavController,\r\n    public app: AppComponent,\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    if (this.authService.isLoggedin()) {\r\n      if (localStorage.getItem('ur') == 'admin') {\r\n        this.router.navigateByUrl('report');\r\n        this.app.openPage('Users');\r\n      } else {\r\n        if (localStorage.getItem('current_page_type') == 'flight') {\r\n          this.router.navigateByUrl('home');\r\n          this.app.openPage('Booking');\r\n        } else {\r\n          this.router.navigateByUrl('tickets');\r\n          this.app.openPage('Tickets');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  async login() {\r\n    let email = this.loginForm.get('email').value;\r\n    let password = this.loginForm.get('password').value;\r\n    const loading = await this.loadingCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Please wait...',\r\n    });\r\n\r\n    if (email == '') {\r\n      this.presentAlert('Email is required ⚠️');\r\n    } else if (password == '') {\r\n      this.presentAlert('Password is required ⚠️');\r\n    } else if (!this.api.validateEmail(email)) {\r\n      this.presentAlert('Invalid email entered ❌');\r\n    }\r\n    else {\r\n      await loading.present();\r\n      this.authService.login(\r\n        email,\r\n        password\r\n      ).subscribe(\r\n        data => {\r\n          if (data.status == 0) {\r\n            loading.dismiss();\r\n            localStorage.setItem('uuid', data.data[0].uuid);\r\n            localStorage.setItem('ur', data.data[0].role);\r\n            localStorage.setItem('username', data.data[0].surname + ' ' + data.data[0].name);\r\n            this.app.isLoggedIn = true;\r\n            // this.app.openPage('Users');\r\n            window.location.reload();\r\n          } else if (data.status == 1) {\r\n            loading.dismiss();\r\n            this.do_activate_user(data.msg);\r\n          } else {\r\n            loading.dismiss();\r\n            this.presentAlert(data.msg);\r\n          }\r\n        }, error => {\r\n          loading.dismiss();\r\n          this.presentAlert(\"Could not connect to server 🖥️, check your internet connection!\");\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  async presentAlert(msg) {\r\n    const alert = await this.alertCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Air Food ✈️',\r\n      subHeader: 'Warning',\r\n      message: msg,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async resetPass() {\r\n    let email = this.loginForm.get('email').value;\r\n    const alert = await this.alertCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Reset Password!',\r\n      inputs: [\r\n        {\r\n          name: 'email',\r\n          type: 'text',\r\n          placeholder: 'Enter your Email',\r\n          cssClass: 'specialClass',\r\n          attributes: {\r\n            inputmode: 'decimal',\r\n            value: ''\r\n          }\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n          }\r\n        }, {\r\n          text: 'Ok',\r\n          handler: async (data) => {\r\n            const loading = await this.loadingCtrl.create({\r\n              cssClass: 'my-custom-class',\r\n              message: 'Please wait...',\r\n            });\r\n            if (data.email.length < 3) {\r\n              this.presentAlert('Email Required');\r\n            } else {\r\n              await loading.present();\r\n              this.api.reset_password(\r\n                email\r\n              ).subscribe(\r\n                data => {\r\n                  if (data.status == 0) {\r\n                    loading.dismiss();\r\n                    this.toaster.successToast(data.msg);\r\n                    this.presentAlert('Password reseted check your emails for further instructions!')\r\n                    console.log(data);\r\n                  } else {\r\n                    loading.dismiss();\r\n                    this.presentAlert(data.msg);\r\n                  }\r\n                }, error => {\r\n                  loading.dismiss();\r\n                  this.presentAlert(error.message);\r\n                }\r\n              )\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async do_activate_user(msg) {\r\n    let email = this.loginForm.get('email').value;\r\n    console.log(email);\r\n    const alert = await this.alertCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Re-activate',\r\n      message:msg,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n          }\r\n        }, {\r\n          text: 'Re-activate',\r\n          handler: async (data) => {\r\n            const loading = await this.loadingCtrl.create({\r\n              cssClass: 'my-custom-class',\r\n              message: 'Please wait...',\r\n            });\r\n\r\n            await loading.present();\r\n            this.api.activate_user(\r\n              email\r\n            ).subscribe(\r\n              data => {\r\n                if (data.status == 0) {\r\n                  loading.dismiss();\r\n                  this.toaster.successToast(data.msg);\r\n                  this.presentAlert('Re-activation in process, check your emails for further instructions!')\r\n                  console.log(data);\r\n                } else {\r\n                  loading.dismiss();\r\n                  this.presentAlert(data.msg);\r\n                }\r\n              }, error => {\r\n                loading.dismiss();\r\n                this.presentAlert(error.message);\r\n              }\r\n            )\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  revert() {\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n"]}