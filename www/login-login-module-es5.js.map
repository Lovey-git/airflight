{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","fb","api","toaster","authService","alertCtrl","loadingCtrl","navCtrl","loginForm","group","email","required","password","get","value","create","cssClass","message","loading","presentAlert","present","login","subscribe","data","status","dismiss","localStorage","setItem","uuid","role","navigateByUrl","msg","error","header","subHeader","buttons","alert","inputs","name","type","placeholder","attributes","inputmode","text","handler","length","reset_password","console","log","reset","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content fullscreen>\\n  <ion-grid>\\n    <div class=\\\"login-form\\\">\\n      <ion-col>\\n\\n        <div class=\\\"txt-center\\\">\\n          <ion-icon style=\\\"font-size: 55px;\\\" name=\\\"log-in-outline\\\"></ion-icon>\\n          <br>\\n          <strong>Login</strong>\\n          <br>\\n          <ion-label color=\\\"dark\\\">Sign Into Your Account.</ion-label>\\n          <br>\\n          <br>\\n        </div>\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n          <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" required placeholder=\\\"Email\\\">\\n            <ion-icon name=\\\"at-outline\\\">\\n            </ion-icon>\\n          </ion-input>\\n          <br>\\n          <ion-input formControlName=\\\"password\\\" required placeholder=\\\"Password\\\" type=\\\"Password\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"lock-closed-outline\\\"></ion-icon>\\n          </ion-input>\\n          <br>\\n          <ion-button class=\\\"txt-center\\\" type=\\\"submit\\\" color=\\\"primary\\\">Login</ion-button>\\n        </form>\\n        <ion-footer class=\\\"txt-center\\\">\\n          <br>\\n          <ion-label color=\\\"primary\\\" routerLink=\\\"/register\\\">No account? Sign up here.</ion-label>\\n          <br>\\n          <ion-label color=\\\"primary\\\" (click)=\\\"resetPass()\\\">Forgot Password? Click here.</ion-label>\\n        </ion-footer>\\n      </ion-col>\\n    </div>\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../services/api.service';\nimport { ToasterService } from '../../services/toaster.service';\nimport { AuthService } from '../../services/auth.service';\nimport { AlertController, ToastController, LoadingController, MenuController, NavController } from '@ionic/angular';\nimport { invalid } from '@angular/compiler/src/render3/view/util';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public loginForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private api: ApiService,\n    private toaster: ToasterService,\n    private authService: AuthService,\n    private alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    public navCtrl: NavController,\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  async login() {\n    let email = this.loginForm.get('email').value;\n    let password = this.loginForm.get('password').value;\n    const loading = await this.loadingCtrl.create({\n      cssClass: 'my-custom-class',\n      message: 'Please wait...',\n    });\n\n    if( email == '' ){\n      this.presentAlert('Email is required');\n    }else if(password == ''){\n      this.presentAlert('Password is required');\n    }else{\n      await loading.present();\n      this.authService.login(\n        email,\n        password\n      ).subscribe(\n        data => {\n          if (data.status == 0) {\n            loading.dismiss();\n            localStorage.setItem('uuid', data.data[0].uuid);\n            localStorage.setItem('ur', data.data[0].role);\n            this.router.navigateByUrl('/home');\n          } else {\n            loading.dismiss();\n            this.presentAlert(data.msg);\n          }\n        }, error => {\n          //console.log(error);\n        }\n      )\n    }\n  }\n\n  async presentAlert(msg) {\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n      header: 'Air Food ✈️',\n      subHeader: 'Warning',\n      message: msg,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async resetPass() {\n    let email = this.loginForm.get('email').value;\n    const alert = await this.alertCtrl.create({\n      cssClass: 'my-custom-class',\n      header: 'Reset Password!',\n      inputs: [\n        {\n          name: 'email',\n          type: 'text',\n          placeholder: 'Enter your Email',\n          cssClass: 'specialClass',\n          attributes: {\n            inputmode: 'decimal',\n            value: ''\n          }\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Ok',\n          handler: async (data) => {\n            const loading = await this.loadingCtrl.create({\n              cssClass: 'my-custom-class',\n              message: 'Please wait...',\n            });\n            if(data.email.length < 3) {\n              this.presentAlert('Email Required');\n            }else {\n              await loading.present();\n              this.api.reset_password(\n                email\n              ).subscribe(\n                data => {\n                  if (data.status == 0) {\n                    loading.dismiss();\n                    console.log(data);\n                  } else {\n                    loading.dismiss();\n                    this.presentAlert(data.msg);\n                  }\n                }, error => {\n                  loading.dismiss();\n                  this.presentAlert(error.message);\n                }\n              )\n            } \n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  \n\n\n\n  revert() {\n    this.loginForm.reset();\n  }\n\n}\n"]}